import { BarChart3, TrendingUp, AlertTriangle, Calendar, Download, Filter, FileText, PieChart, Activity, Users, Clock, Target } from "lucide-react";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Input } from "@/components/ui/input";
import Header from "@/components/Header";

const ReportsPage = () => {
  const alertStats = [
    { 
      title: "Total Alerts", 
      value: "1,247", 
      change: "+12%", 
      trend: "up",
      icon: AlertTriangle,
      color: "text-red-600",
      bgColor: "bg-red-50",
      gradient: "from-red-500 to-red-600"
    },
    { 
      title: "Active Threats", 
      value: "8", 
      change: "-3", 
      trend: "down",
      icon: Activity,
      color: "text-orange-600",
      bgColor: "bg-orange-50",
      gradient: "from-orange-500 to-orange-600"
    },
    { 
      title: "Response Time", 
      value: "2.3 min", 
      change: "-0.5 min", 
      trend: "up",
      icon: Clock,
      color: "text-green-600",
      bgColor: "bg-green-50",
      gradient: "from-green-500 to-green-600"
    },
    { 
      title: "Accuracy Rate", 
      value: "94.2%", 
      change: "+2.1%", 
      trend: "up",
      icon: Target,
      color: "text-blue-600",
      bgColor: "bg-blue-50",
      gradient: "from-blue-500 to-blue-600"
    },
  ];

  const recentReports = [
    {
      id: "RPT-2024-001",
      title: "Monthly Threat Analysis Report",
      date: "2024-01-15",
      type: "Monthly",
      status: "Completed",
      size: "2.4 MB",
      priority: "high"
    },
    {
      id: "RPT-2024-002",
      title: "Storm Surge Prediction Accuracy",
      date: "2024-01-10",
      type: "Analysis",
      status: "Completed",
      size: "1.8 MB",
      priority: "medium"
    },
    {
      id: "RPT-2024-003",
      title: "Emergency Response Performance",
      date: "2024-01-08",
      type: "Performance",
      status: "In Progress",
      size: "3.1 MB",
      priority: "high"
    },
    {
      id: "RPT-2024-004",
      title: "System Reliability Metrics",
      date: "2024-01-05",
      type: "Technical",
      status: "Completed",
      size: "1.2 MB",
      priority: "low"
    }
  ];

  const threatCategories = [
    { name: "Storm Surge", count: 45, percentage: 35, color: "bg-blue-500" },
    { name: "High Winds", count: 32, percentage: 25, color: "bg-orange-500" },
    { name: "Heavy Rainfall", count: 28, percentage: 22, color: "bg-green-500" },
    { name: "Coastal Flooding", count: 15, percentage: 12, color: "bg-purple-500" },
    { name: "Rip Currents", count: 8, percentage: 6, color: "bg-red-500" }
  ];

  const monthlyData = [
    { month: "Jan", alerts: 45, evacuations: 12, accuracy: 92 },
    { month: "Feb", alerts: 38, evacuations: 8, accuracy: 94 },
    { month: "Mar", alerts: 52, evacuations: 15, accuracy: 91 },
    { month: "Apr", alerts: 41, evacuations: 10, accuracy: 93 },
    { month: "May", alerts: 48, evacuations: 13, accuracy: 95 },
    { month: "Jun", alerts: 55, evacuations: 18, accuracy: 89 }
  ];

  // Download functionality
  const downloadReport = (report: any) => {
    // Create a sample report content based on the report type
    let content = '';
    const timestamp = new Date().toLocaleString();
    
    switch (report.type) {
      case 'Monthly':
        content = `Monthly Threat Analysis Report
Generated: ${timestamp}
Report ID: ${report.id}

EXECUTIVE SUMMARY
- Total alerts processed: 1,247
- Average response time: 2.3 minutes
- System accuracy: 94.2%
- Active threats monitored: 8

DETAILED ANALYSIS
1. Storm Surge Events: 45 (35%)
2. High Wind Events: 32 (25%)
3. Heavy Rainfall: 28 (22%)
4. Coastal Flooding: 15 (12%)
5. Rip Current Warnings: 8 (6%)

RECOMMENDATIONS
- Continue monitoring coastal areas
- Maintain current response protocols
- Consider additional sensors in high-risk zones

This report was automatically generated by the Coastal Threat Alert System.`;
        break;
        
      case 'Analysis':
        content = `Storm Surge Prediction Accuracy Report
Generated: ${timestamp}
Report ID: ${report.id}

PREDICTION ACCURACY ANALYSIS
- Overall accuracy: 94.2%
- False positive rate: 3.1%
- False negative rate: 2.7%
- Average prediction lead time: 2.3 hours

MODEL PERFORMANCE
- Machine learning model accuracy: 96.8%
- Traditional forecasting accuracy: 91.6%
- Combined approach accuracy: 94.2%

RECOMMENDATIONS
- Model shows excellent performance
- Consider reducing false positive threshold
- Continue data collection for model improvement`;
        break;
        
      case 'Performance':
        content = `Emergency Response Performance Report
Generated: ${timestamp}
Report ID: ${report.id}

RESPONSE METRICS
- Average response time: 2.3 minutes
- Evacuation completion rate: 98.7%
- Communication effectiveness: 95.2%
- Resource utilization: 87.3%

PERFORMANCE BREAKDOWN
1. Alert Generation: 0.8 minutes
2. Notification Delivery: 0.5 minutes
3. Response Coordination: 1.0 minutes

AREAS FOR IMPROVEMENT
- Reduce coordination time by 15%
- Improve resource allocation efficiency
- Enhance communication protocols`;
        break;
        
      case 'Technical':
        content = `System Reliability Metrics Report
Generated: ${timestamp}
Report ID: ${report.id}

SYSTEM UPTIME
- Overall uptime: 99.97%
- Planned maintenance: 0.02%
- Unplanned downtime: 0.01%

PERFORMANCE METRICS
- Average response time: 45ms
- Database query performance: 12ms
- API endpoint availability: 99.99%
- Data processing throughput: 1,000 req/sec

SYSTEM HEALTH
- All sensors operational: 100%
- Data backup success rate: 100%
- Security audit status: Passed
- Compliance status: Fully compliant

RECOMMENDATIONS
- System performing excellently
- Continue regular maintenance schedule
- Monitor for capacity planning`;
        break;
        
      default:
        content = `General Report
Generated: ${timestamp}
Report ID: ${report.id}

This is a sample report generated by the Coastal Threat Alert System.
For more detailed information, please contact the system administrator.`;
    }

    // Create and download the file
    const blob = new Blob([content], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${report.title.replace(/\s+/g, '_')}_${report.date}.txt`;
    document.body.appendChild(a);
    a.click();
    window.URL.revokeObjectURL(url);
    document.body.removeChild(a);
  };

  const generateNewReport = (type: string) => {
    const newReport = {
      id: `RPT-${Date.now()}`,
      title: `${type} Report - ${new Date().toLocaleDateString()}`,
      date: new Date().toLocaleDateString(),
      type: type,
      status: "Completed",
      size: "1.5 MB"
    };
    
    downloadReport(newReport);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50 to-indigo-50">
      <Header />
      <div className="container mx-auto px-4 py-8 space-y-8">
      <div className="text-center space-y-4">
        <div className="relative inline-flex items-center justify-center mb-6">
          <div className="absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full blur-xl opacity-20 animate-pulse"></div>
          <div className="relative bg-white p-4 rounded-full shadow-lg">
            <BarChart3 className="h-12 w-12 text-blue-600" />
          </div>
        </div>
        <h1 className="text-5xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
          Reports & Analytics
        </h1>
        <p className="text-xl text-slate-600 max-w-3xl mx-auto leading-relaxed">
          Comprehensive reports and analytics for coastal threat monitoring and response performance.
        </p>
        <div className="flex items-center justify-center gap-4 mt-6">
          <div className="flex items-center gap-2 text-sm text-slate-500">
            <FileText className="h-4 w-4 text-blue-500" />
            <span>Real-time Data</span>
          </div>
          <div className="w-1 h-1 bg-slate-300 rounded-full"></div>
          <div className="flex items-center gap-2 text-sm text-slate-500">
            <TrendingUp className="h-4 w-4 text-green-500" />
            <span>Performance Metrics</span>
          </div>
          <div className="w-1 h-1 bg-slate-300 rounded-full"></div>
          <div className="flex items-center gap-2 text-sm text-slate-500">
            <Download className="h-4 w-4 text-purple-500" />
            <span>Export Ready</span>
          </div>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-6">
        {alertStats.map((stat, index) => {
          const IconComponent = stat.icon;
          return (
            <Card key={index} className="group hover:shadow-2xl transition-all duration-300 hover:-translate-y-2 border-2 border-slate-200 hover:border-blue-300 overflow-hidden">
              <div className={`absolute inset-0 bg-gradient-to-br ${stat.gradient} opacity-0 group-hover:opacity-5 transition-opacity duration-300`}></div>
              <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-4 relative">
                <div className={`p-3 rounded-xl ${stat.bgColor}`}>
                  <IconComponent className={`h-6 w-6 ${stat.color}`} />
                </div>
                <div className="text-right">
                  <p className={`text-sm font-medium ${stat.trend === "up" ? "text-green-600" : "text-red-600"}`}>
                    {stat.change}
                  </p>
                  <p className="text-xs text-slate-500">from last month</p>
                </div>
              </CardHeader>
              <CardContent className="relative">
                <div className="text-3xl font-bold text-slate-800 mb-2 group-hover:scale-110 transition-transform duration-200">
                  {stat.value}
                </div>
                <p className="text-slate-600 font-medium">{stat.title}</p>
              </CardContent>
            </Card>
          );
        })}
      </div>

      {/* Recent Reports */}
      <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
        <CardHeader>
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
              <div className="p-2 rounded-lg bg-blue-100">
                <FileText className="h-6 w-6 text-blue-600" />
              </div>
              <div>
                <CardTitle className="text-2xl font-bold text-slate-800">Recent Reports</CardTitle>
                <CardDescription className="text-slate-600">
                  Download and view recent system reports
                </CardDescription>
              </div>
            </div>
            <div className="flex items-center gap-2">
              <Select>
                <SelectTrigger className="w-[180px]">
                  <SelectValue placeholder="Filter by type" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="all">All Reports</SelectItem>
                  <SelectItem value="monthly">Monthly</SelectItem>
                  <SelectItem value="analysis">Analysis</SelectItem>
                  <SelectItem value="performance">Performance</SelectItem>
                  <SelectItem value="technical">Technical</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {recentReports.map((report) => (
              <div key={report.id} className="group p-6 bg-gradient-to-r from-slate-50 to-slate-100 rounded-xl border border-slate-200 hover:border-blue-300 hover:shadow-lg transition-all duration-200">
                <div className="flex items-center justify-between">
                  <div className="flex-1">
                    <div className="flex items-center gap-3 mb-2">
                      <h3 className="font-semibold text-slate-800 text-lg group-hover:text-blue-600 transition-colors">
                        {report.title}
                      </h3>
                      <Badge 
                        variant={report.status === "Completed" ? "default" : "secondary"}
                        className="bg-green-100 text-green-700 border-green-200"
                      >
                        {report.status}
                      </Badge>
                      {report.priority === 'high' && (
                        <Badge variant="destructive" className="text-xs">
                          High Priority
                        </Badge>
                      )}
                    </div>
                    <div className="flex items-center gap-4 text-sm text-slate-500">
                      <span className="flex items-center gap-1">
                        <Calendar className="h-3 w-3" />
                        {report.id}
                      </span>
                      <span>{report.type}</span>
                      <span>{report.date}</span>
                      <span>{report.size}</span>
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <Button 
                      variant="outline" 
                      size="sm"
                      onClick={() => downloadReport(report)}
                      className="hover:bg-blue-50 hover:border-blue-300 transition-colors"
                    >
                      <Download className="h-4 w-4 mr-2" />
                      Download
                    </Button>
                    <Button variant="outline" size="sm" className="hover:bg-slate-50">
                      View
                    </Button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Threat Categories Chart */}
      <div className="grid md:grid-cols-2 gap-8">
        <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
          <CardHeader>
            <CardTitle className="text-xl font-bold text-slate-800 flex items-center gap-3">
              <div className="p-2 rounded-lg bg-purple-100">
                <PieChart className="h-5 w-5 text-purple-600" />
              </div>
              Threat Categories
            </CardTitle>
            <CardDescription className="text-slate-600">
              Distribution of different types of coastal threats
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {threatCategories.map((category, index) => (
                <div key={index} className="group p-4 bg-slate-50 rounded-lg hover:bg-slate-100 transition-colors">
                  <div className="flex items-center justify-between">
                    <div className="flex items-center gap-3">
                      <div className={`h-4 w-4 rounded-full ${category.color}`}></div>
                      <span className="font-medium text-slate-700">{category.name}</span>
                    </div>
                    <div className="flex items-center gap-3">
                      <span className="text-sm text-slate-500">{category.count}</span>
                      <span className="font-semibold text-slate-800">{category.percentage}%</span>
                    </div>
                  </div>
                  <div className="mt-2 w-full bg-slate-200 rounded-full h-2">
                    <div 
                      className={`h-2 rounded-full ${category.color} transition-all duration-300 group-hover:scale-105`}
                      style={{ width: `${category.percentage}%` }}
                    ></div>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
          <CardHeader>
            <CardTitle className="text-xl font-bold text-slate-800 flex items-center gap-3">
              <div className="p-2 rounded-lg bg-green-100">
                <TrendingUp className="h-5 w-5 text-green-600" />
              </div>
              Monthly Trends
            </CardTitle>
            <CardDescription className="text-slate-600">
              Alert frequency and response metrics over time
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {monthlyData.map((data, index) => (
                <div key={index} className="group p-4 bg-slate-50 rounded-lg hover:bg-slate-100 transition-colors border border-slate-200">
                  <div className="flex items-center justify-between mb-3">
                    <span className="font-semibold text-slate-800">{data.month}</span>
                    <span className="text-sm text-green-600 font-medium">{data.accuracy}% accuracy</span>
                  </div>
                  <div className="flex items-center justify-between text-sm text-slate-600">
                    <span className="flex items-center gap-1">
                      <AlertTriangle className="h-3 w-3" />
                      {data.alerts} alerts
                    </span>
                    <span className="flex items-center gap-1">
                      <Users className="h-3 w-3" />
                      {data.evacuations} evacuations
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Quick Actions */}
      <Card className="bg-white/80 backdrop-blur-sm border-0 shadow-xl">
        <CardHeader className="text-center">
          <CardTitle className="text-2xl font-bold text-slate-800 flex items-center justify-center gap-3">
            <div className="p-2 rounded-lg bg-blue-100">
              <BarChart3 className="h-6 w-6 text-blue-600" />
            </div>
            Generate New Report
          </CardTitle>
          <CardDescription className="text-slate-600">
            Create custom reports based on your specific requirements
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid md:grid-cols-3 gap-6">
            <Button 
              variant="outline" 
              className="h-24 flex flex-col space-y-3 group hover:shadow-lg transition-all duration-200 hover:-translate-y-1 border-2 border-slate-200 hover:border-red-300"
              onClick={() => generateNewReport('Threat Analysis')}
            >
              <div className="p-2 rounded-lg bg-red-100 group-hover:bg-red-200 transition-colors">
                <AlertTriangle className="h-6 w-6 text-red-600" />
              </div>
              <span className="font-medium">Threat Analysis</span>
            </Button>
            <Button 
              variant="outline" 
              className="h-24 flex flex-col space-y-3 group hover:shadow-lg transition-all duration-200 hover:-translate-y-1 border-2 border-slate-200 hover:border-blue-300"
              onClick={() => generateNewReport('Performance')}
            >
              <div className="p-2 rounded-lg bg-blue-100 group-hover:bg-blue-200 transition-colors">
                <BarChart3 className="h-6 w-6 text-blue-600" />
              </div>
              <span className="font-medium">Performance Report</span>
            </Button>
            <Button 
              variant="outline" 
              className="h-24 flex flex-col space-y-3 group hover:shadow-lg transition-all duration-200 hover:-translate-y-1 border-2 border-slate-200 hover:border-green-300"
              onClick={() => generateNewReport('Trend Analysis')}
            >
              <div className="p-2 rounded-lg bg-green-100 group-hover:bg-green-200 transition-colors">
                <TrendingUp className="h-6 w-6 text-green-600" />
              </div>
              <span className="font-medium">Trend Analysis</span>
            </Button>
          </div>
        </CardContent>
      </Card>
      </div>
    </div>
  );
};

export default ReportsPage;
